#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
#define MAX_CYLINDERS 200

void sstf(int requests[], int n, int head) {
    int completed[MAX_CYLINDERS] = {0}; 
    int seek_count = 0;
    int current_position = head;

    printf("SSTF Disk Scheduling:\n");
    
    for (int i = 0; i < n; i++) {
        int min_distance = INT_MAX;
        int index = -1;

        for (int j = 0; j < n; j++) {
            if (!completed[j]) {
                int distance = abs(requests[j] - current_position);
                if (distance < min_distance) {
                    min_distance = distance;
                    index = j;
                }
            }
        }

        completed[index] = 1;
        
        seek_count += min_distance;
        current_position = requests[index];

        printf("Step %d: Head moved to %d with the seek value %d\n", i + 1, current_position, min_distance);
    }

    printf("Total seek time (SSTF) is: %d\n", seek_count);
}

int main() {
    int n, initial_head;

    printf("Enter the number of disk requests: ");
    scanf("%d", &n);

    int requests[n];
    printf("Enter the requests: ");
    for (int i = 0; i < n; i++) {
        scanf("%d", &requests[i]);
    }

    printf("Enter the initial head position: ");
    scanf("%d", &initial_head);

    for (int i = 0; i < n; i++) {
        if (requests[i] < 0 || requests[i] >= MAX_CYLINDERS) {
            printf("Error: Request %d out of range (0 - %d)\n", requests[i], MAX_CYLINDERS - 1);
            return 1;
        }
    }

    sstf(requests, n, initial_head);

    return 0;
}
